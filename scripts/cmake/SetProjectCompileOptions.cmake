function(set_project_compile_options PROJECT_COMPILE_OPTIONS)
    set(COMPILE_OPTIONS "")
    if (MSVC)
        list(APPEND COMPILE_OPTIONS /W4)
        list(APPEND COMPILE_OPTIONS /WX)
        list(APPEND COMPILE_OPTIONS /w14640)
    endif ()
    if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
        list(APPEND COMPILE_OPTIONS -Wall)
        list(APPEND COMPILE_OPTIONS -Wextra)
        list(APPEND COMPILE_OPTIONS -Werror)
        list(APPEND COMPILE_OPTIONS -Wshadow)
        list(APPEND COMPILE_OPTIONS -Wnon-virtual-dtor)
        list(APPEND COMPILE_OPTIONS -Wold-style-cast)
        list(APPEND COMPILE_OPTIONS -Wcast-align)
        list(APPEND COMPILE_OPTIONS -Woverloaded-virtual)
        list(APPEND COMPILE_OPTIONS -Wpedantic)
        list(APPEND COMPILE_OPTIONS -Wconversion)
        list(APPEND COMPILE_OPTIONS -Wsign-conversion)
        list(APPEND COMPILE_OPTIONS -Wdouble-promotion)
        list(APPEND COMPILE_OPTIONS -Wformat=2)
        list(APPEND COMPILE_OPTIONS -Wno-unused-macros)
    endif ()
    if (CMAKE_CXX_COMPILER_ID MATCHES "GNU")
        list(APPEND COMPILE_OPTIONS -Wmisleading-indentation)
        list(APPEND COMPILE_OPTIONS -Wduplicated-cond)
        list(APPEND COMPILE_OPTIONS -Wnull-dereference)
        list(APPEND COMPILE_OPTIONS -Wlogical-op)
        list(APPEND COMPILE_OPTIONS -Wduplicated-branches)
        list(APPEND COMPILE_OPTIONS -Wuseless-cast)
    endif ()
    if (CMAKE_CXX_COMPILER_ID MATCHES "Clang")
        list(APPEND COMPILE_OPTIONS -Weverything)
        list(APPEND COMPILE_OPTIONS -Wno-c++98-compat-pedantic)
        list(APPEND COMPILE_OPTIONS -Wno-c++98-compat)
        list(APPEND COMPILE_OPTIONS -Wno-documentation)
        list(APPEND COMPILE_OPTIONS -Wno-switch-enum)
        list(APPEND COMPILE_OPTIONS -Wno-weak-vtables)
        list(APPEND COMPILE_OPTIONS -Wno-padded)
        list(APPEND COMPILE_OPTIONS -Wno-missing-prototypes)
        list(APPEND COMPILE_OPTIONS -Wno-missing-noreturn)
        list(APPEND COMPILE_OPTIONS -Wno-exit-time-destructors)
        list(APPEND COMPILE_OPTIONS -Wno-documentation-unknown-command)
        list(APPEND COMPILE_OPTIONS -Wno-unused-template)
    endif ()
    set(${PROJECT_COMPILE_OPTIONS} ${COMPILE_OPTIONS} PARENT_SCOPE)
endfunction()